{"ast":null,"code":"var _jsxFileName = \"/Users/peterburger/Desktop/alloy/alloy-app/client/src/pages/Application.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/submit-application';\n\n// List of ISO 3166-1 alpha-2 country codes\nconst countryList = [{\n  code: \"US\",\n  name: \"United States\"\n}, {\n  code: \"CA\",\n  name: \"Canada\"\n}, {\n  code: \"GB\",\n  name: \"United Kingdom\"\n}, {\n  code: \"FR\",\n  name: \"France\"\n}, {\n  code: \"DE\",\n  name: \"Germany\"\n}, {\n  code: \"IN\",\n  name: \"India\"\n}, {\n  code: \"AU\",\n  name: \"Australia\"\n}, {\n  code: \"JP\",\n  name: \"Japan\"\n}, {\n  code: \"CN\",\n  name: \"China\"\n}, {\n  code: \"MX\",\n  name: \"Mexico\"\n}];\nconst Application = () => {\n  _s();\n  const initialFormState = {\n    email_address: '',\n    address_line_1: '',\n    address_country_code: '',\n    phone_number: '',\n    name_first: '',\n    name_last: '',\n    business_name: '',\n    address_line_2: '',\n    address_city: '',\n    address_state: '',\n    address_postal_code: '',\n    document_ssn: '',\n    document_ssn_last4: '',\n    document_license: '',\n    document_license_state: '',\n    birth_date: '',\n    user_consent: false\n  };\n  const [formData, setFormData] = useState(initialFormState);\n  const [errors, setErrors] = useState({});\n  const [message, setMessage] = useState('');\n\n  // Validation Function\n  const validateField = (name, value) => {\n    let error = '';\n    switch (name) {\n      case 'email_address':\n        error = /\\S+@\\S+\\.\\S+/.test(value) ? '' : 'Invalid email format';\n        break;\n      case 'phone_number':\n        error = /^\\d{10,15}$/.test(value) ? '' : 'Phone number must be 10-15 digits';\n        break;\n      case 'address_country_code':\n        error = /^[A-Z]{2}$/.test(value) ? '' : 'Must be a 2-letter country code (ISO 3166-1)';\n        break;\n      case 'document_ssn':\n        error = /^\\d{9}$/.test(value) ? '' : 'SSN must be exactly 9 digits';\n        break;\n      case 'document_ssn_last4':\n        error = /^\\d{4}$/.test(value) ? '' : 'SSN last 4 must be exactly 4 digits';\n        break;\n      case 'birth_date':\n        error = /^\\d{4}-\\d{2}-\\d{2}$/.test(value) ? '' : 'Date must be in YYYY-MM-DD format';\n        break;\n      default:\n        break;\n    }\n    return error;\n  };\n\n  // Handle Input Changes\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setFormData({\n      ...formData,\n      [name]: newValue\n    });\n    const error = validateField(name, newValue);\n    setErrors({\n      ...errors,\n      [name]: error\n    });\n  };\n\n  // Handle Country Selection\n  const handleCountryChange = e => {\n    setFormData({\n      ...formData,\n      address_country_code: e.target.value\n    });\n    setErrors({\n      ...errors,\n      address_country_code: validateField('address_country_code', e.target.value)\n    });\n  };\n\n  // Handle Date Selection\n  const handleDateChange = e => {\n    const selectedDate = e.target.value;\n    setFormData({\n      ...formData,\n      birth_date: selectedDate\n    });\n    setErrors({\n      ...errors,\n      birth_date: validateField('birth_date', selectedDate)\n    });\n  };\n\n  // Check if the Form is Valid\n  const isValidForm = () => {\n    const requiredFields = ['email_address', 'address_line_1', 'address_country_code', 'phone_number'];\n    for (let field of requiredFields) {\n      if (!formData[field]) return false;\n    }\n    if (!formData.business_name && (!formData.name_first || !formData.name_last)) {\n      return false;\n    }\n    return Object.values(errors).every(error => !error);\n  };\n\n  // Handle Form Submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isValidForm()) {\n      setMessage('Please fill in all required fields correctly.');\n      return;\n    }\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(`Success: ${JSON.stringify(data)}`);\n        setFormData(initialFormState);\n      } else {\n        setMessage(`Error: ${data.error || 'Failed to submit application'}`);\n      }\n    } catch (error) {\n      setMessage('Error submitting application');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Application Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email Address*:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email_address\",\n        value: formData.email_address,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), errors.email_address && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.email_address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address Line 1*:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address_line_1\",\n        value: formData.address_line_1,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Country Code (ISO 3166-1)*:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"address_country_code\",\n        value: formData.address_country_code,\n        onChange: handleCountryChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), countryList.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country.code,\n          children: [country.code, \" - \", country.name]\n        }, country.code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), errors.address_country_code && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.address_country_code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone Number*:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phone_number\",\n        value: formData.phone_number,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), errors.phone_number && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.phone_number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name_first\",\n        value: formData.name_first,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Last Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name_last\",\n        value: formData.name_last,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Birth Date (YYYY-MM-DD):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"birth_date\",\n        value: formData.birth_date,\n        onChange: handleDateChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), errors.birth_date && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.birth_date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"user_consent\",\n          checked: formData.user_consent,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), \"I consent to the terms.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !isValidForm(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n_s(Application, \"rdHfZ2WSVT3T4JNeIKCsIKr3UMQ=\");\n_c = Application;\nexport default Application;\nvar _c;\n$RefreshReg$(_c, \"Application\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_URL","countryList","code","name","Application","_s","initialFormState","email_address","address_line_1","address_country_code","phone_number","name_first","name_last","business_name","address_line_2","address_city","address_state","address_postal_code","document_ssn","document_ssn_last4","document_license","document_license_state","birth_date","user_consent","formData","setFormData","errors","setErrors","message","setMessage","validateField","value","error","test","handleChange","e","type","checked","target","newValue","handleCountryChange","handleDateChange","selectedDate","isValidForm","requiredFields","field","Object","values","every","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","className","map","country","disabled","_c","$RefreshReg$"],"sources":["/Users/peterburger/Desktop/alloy/alloy-app/client/src/pages/Application.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst API_URL = 'http://localhost:5000/submit-application';\n\n// List of ISO 3166-1 alpha-2 country codes\nconst countryList = [\n    { code: \"US\", name: \"United States\" },\n    { code: \"CA\", name: \"Canada\" },\n    { code: \"GB\", name: \"United Kingdom\" },\n    { code: \"FR\", name: \"France\" },\n    { code: \"DE\", name: \"Germany\" },\n    { code: \"IN\", name: \"India\" },\n    { code: \"AU\", name: \"Australia\" },\n    { code: \"JP\", name: \"Japan\" },\n    { code: \"CN\", name: \"China\" },\n    { code: \"MX\", name: \"Mexico\" }\n];\n\nconst Application = () => {\n    const initialFormState = {\n        email_address: '',\n        address_line_1: '',\n        address_country_code: '',\n        phone_number: '',\n        name_first: '',\n        name_last: '',\n        business_name: '',\n        address_line_2: '',\n        address_city: '',\n        address_state: '',\n        address_postal_code: '',\n        document_ssn: '',\n        document_ssn_last4: '',\n        document_license: '',\n        document_license_state: '',\n        birth_date: '',\n        user_consent: false\n    };\n    const [formData, setFormData] = useState(initialFormState);\n    const [errors, setErrors] = useState({});\n    const [message, setMessage] = useState('');\n\n    // Validation Function\n    const validateField = (name, value) => {\n        let error = '';\n\n        switch (name) {\n            case 'email_address':\n                error = /\\S+@\\S+\\.\\S+/.test(value) ? '' : 'Invalid email format';\n                break;\n            case 'phone_number':\n                error = /^\\d{10,15}$/.test(value) ? '' : 'Phone number must be 10-15 digits';\n                break;\n            case 'address_country_code':\n                error = /^[A-Z]{2}$/.test(value) ? '' : 'Must be a 2-letter country code (ISO 3166-1)';\n                break;\n            case 'document_ssn':\n                error = /^\\d{9}$/.test(value) ? '' : 'SSN must be exactly 9 digits';\n                break;\n            case 'document_ssn_last4':\n                error = /^\\d{4}$/.test(value) ? '' : 'SSN last 4 must be exactly 4 digits';\n                break;\n            case 'birth_date':\n                error = /^\\d{4}-\\d{2}-\\d{2}$/.test(value) ? '' : 'Date must be in YYYY-MM-DD format';\n                break;\n            default:\n                break;\n        }\n\n        return error;\n    };\n\n    // Handle Input Changes\n    const handleChange = (e) => {\n        const { name, value, type, checked } = e.target;\n        const newValue = type === 'checkbox' ? checked : value;\n\n        setFormData({ ...formData, [name]: newValue });\n\n        const error = validateField(name, newValue);\n        setErrors({ ...errors, [name]: error });\n    };\n\n    // Handle Country Selection\n    const handleCountryChange = (e) => {\n        setFormData({ ...formData, address_country_code: e.target.value });\n        setErrors({ ...errors, address_country_code: validateField('address_country_code', e.target.value) });\n    };\n\n    // Handle Date Selection\n    const handleDateChange = (e) => {\n        const selectedDate = e.target.value;\n        setFormData({ ...formData, birth_date: selectedDate });\n        setErrors({ ...errors, birth_date: validateField('birth_date', selectedDate) });\n    };\n\n    // Check if the Form is Valid\n    const isValidForm = () => {\n        const requiredFields = ['email_address', 'address_line_1', 'address_country_code', 'phone_number'];\n        for (let field of requiredFields) {\n            if (!formData[field]) return false;\n        }\n\n        if (!formData.business_name && (!formData.name_first || !formData.name_last)) {\n            return false;\n        }\n\n        return Object.values(errors).every(error => !error);\n    };\n\n    // Handle Form Submission\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!isValidForm()) {\n            setMessage('Please fill in all required fields correctly.');\n            return;\n        }\n\n        try {\n            const response = await fetch(API_URL, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(formData),\n            });\n\n            const data = await response.json();\n            if (response.ok) {\n                setMessage(`Success: ${JSON.stringify(data)}`);\n                setFormData(initialFormState);\n            } else {\n                setMessage(`Error: ${data.error || 'Failed to submit application'}`);\n            }\n        } catch (error) {\n            setMessage('Error submitting application');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Application Form</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Email Address*:</label>\n                <input type=\"email\" name=\"email_address\" value={formData.email_address} onChange={handleChange} required />\n                {errors.email_address && <p className=\"error\">{errors.email_address}</p>}\n\n                <label>Address Line 1*:</label>\n                <input type=\"text\" name=\"address_line_1\" value={formData.address_line_1} onChange={handleChange} required />\n\n                <label>Country Code (ISO 3166-1)*:</label>\n                <select name=\"address_country_code\" value={formData.address_country_code} onChange={handleCountryChange} required>\n                    <option value=\"\">Select a country</option>\n                    {countryList.map((country) => (\n                        <option key={country.code} value={country.code}>\n                            {country.code} - {country.name}\n                        </option>\n                    ))}\n                </select>\n                {errors.address_country_code && <p className=\"error\">{errors.address_country_code}</p>}\n\n                <label>Phone Number*:</label>\n                <input type=\"text\" name=\"phone_number\" value={formData.phone_number} onChange={handleChange} required />\n                {errors.phone_number && <p className=\"error\">{errors.phone_number}</p>}\n\n                <label>First Name:</label>\n                <input type=\"text\" name=\"name_first\" value={formData.name_first} onChange={handleChange} />\n\n                <label>Last Name:</label>\n                <input type=\"text\" name=\"name_last\" value={formData.name_last} onChange={handleChange} />\n\n                <label>Birth Date (YYYY-MM-DD):</label>\n                <input type=\"date\" name=\"birth_date\" value={formData.birth_date} onChange={handleDateChange} required />\n                {errors.birth_date && <p className=\"error\">{errors.birth_date}</p>}\n\n                <label>\n                    <input type=\"checkbox\" name=\"user_consent\" checked={formData.user_consent} onChange={handleChange} />\n                    I consent to the terms.\n                </label>\n\n                <button type=\"submit\" disabled={!isValidForm()}>Submit</button>\n            </form>\n            {message && <p>{message}</p>}\n        </div>\n    );\n};\n\nexport default Application;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}